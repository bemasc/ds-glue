{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2021-08-19T00:29:16.497977+00:00",
  "repo": "bemasc/ds-glue",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "MDU6SXNzdWU5NjMyNjMxNTM=",
      "title": "Adding and replacing in delegation responses",
      "url": "https://github.com/bemasc/ds-glue/issues/2",
      "state": "CLOSED",
      "author": "paulehoffman",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Section 3.2 says: `The resolver SHALL add each of these reconstructed RRSets to the delegation responses, replacing any RRSet with the same owner name and type.` It feels wrong to say that the resolver changes the delegation response: the response is just a response. For example, a resolver that is logging responses should not alter what it logs based on the reconstructed RRSets. \r\n\r\nShould this instead talk about filling the resolver's cache? Does it add to the cache, and replace cached entries, from the reconstructed RRsets? Getting the DS data is a step before the resolver looks in its cache to determine what to do for its next step (possibly using secure transport for the following query).",
      "createdAt": "2021-08-07T16:38:46Z",
      "updatedAt": "2021-08-09T15:49:29Z",
      "closedAt": "2021-08-09T15:49:29Z",
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "OWNER",
          "body": "My impression is that resolvers are under no obligation to cache anything, especially glue records, so I'd like to avoid using that framing.  I've added more detail to the description in #3; please review.",
          "createdAt": "2021-08-09T15:26:55Z",
          "updatedAt": "2021-08-09T15:26:55Z"
        },
        {
          "author": "paulehoffman",
          "authorAssociation": "NONE",
          "body": "Agree that #3 addresses this, so am closing.",
          "createdAt": "2021-08-09T15:49:29Z",
          "updatedAt": "2021-08-09T15:49:29Z"
        }
      ]
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA1Njg3NDE4",
      "title": "Fix NSEC examples",
      "url": "https://github.com/bemasc/ds-glue/pull/1",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Reported by Ilari Liusvaara",
      "createdAt": "2021-08-06T19:02:19Z",
      "updatedAt": "2021-08-10T16:57:05Z",
      "baseRepository": "bemasc/ds-glue",
      "baseRefName": "main",
      "baseRefOid": "178e0f2fe8f1b51fe61f4ee19a16506f1144b6dc",
      "headRepository": "bemasc/ds-glue",
      "headRefName": "fix-nsec-examples",
      "headRefOid": "cbf54ee10dadd5600289ee72bad8cd1b2b017879",
      "closedAt": "2021-08-10T16:56:48Z",
      "mergedAt": "2021-08-10T16:56:48Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "83f227996d3c3980e645fd90cf055b5d6c097185"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NzA2NTg2MDE0",
      "title": "Clarify interpretation of DSGLUE by resolvers",
      "url": "https://github.com/bemasc/ds-glue/pull/3",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Fixes #2",
      "createdAt": "2021-08-09T14:45:08Z",
      "updatedAt": "2021-08-09T16:26:35Z",
      "baseRepository": "bemasc/ds-glue",
      "baseRefName": "main",
      "baseRefOid": "178e0f2fe8f1b51fe61f4ee19a16506f1144b6dc",
      "headRepository": "bemasc/ds-glue",
      "headRefName": "adjusted-response",
      "headRefOid": "232a70574cca2f454b5efb2e4dd6d961f9fd1669",
      "closedAt": "2021-08-09T16:04:47Z",
      "mergedAt": "2021-08-09T16:04:47Z",
      "mergedBy": "bemasc",
      "mergeCommit": {
        "oid": "ef0808483e2ee58c9784440e6d82832d90643cce"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 4,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE0NTUxNDQ1",
      "title": "Remove use of NSEC and restructure around RRSets",
      "url": "https://github.com/bemasc/ds-glue/pull/4",
      "state": "OPEN",
      "author": "bemasc",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "I've been unable to get the NSEC logic correct here, and feedback\r\nsuggests that it is likely to be more difficult to implement than\r\nanticipated.  This version provides a more limited form of authenticated\r\nnonexistence using empty RRSets, which required moving to an\r\nRRSet-oriented format.",
      "createdAt": "2021-08-17T20:40:14Z",
      "updatedAt": "2021-08-18T23:27:56Z",
      "baseRepository": "bemasc/ds-glue",
      "baseRefName": "main",
      "baseRefOid": "83f227996d3c3980e645fd90cf055b5d6c097185",
      "headRepository": "bemasc/ds-glue",
      "headRefName": "no-nsec",
      "headRefOid": "96a3525472cd04a694b21a0bfc086ab21a47542c",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzMzNDIxNzIz",
          "commit": {
            "abbreviatedOid": "96a3525"
          },
          "author": "puneetsood",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "Mostly LGTM - matches my understanding of our discussion.\r\n",
          "createdAt": "2021-08-18T23:05:42Z",
          "updatedAt": "2021-08-18T23:27:56Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Either in this sentence (or the next sentence) clarify if all child zone RRs to be encoded end up in a single DSGLUE RR or multiple DSGLUE RRs.\r\n\r\nReading line 59 below, it seems like each child zone RR ends up in its own DSGLUE RR.",
              "createdAt": "2021-08-18T23:05:42Z",
              "updatedAt": "2021-08-18T23:27:56Z"
            },
            {
              "originalPosition": 177,
              "body": "How does this matter? If the resolver is processing the DSGLUE records, will it not automatically ignore the unprotected A/AAAA records in the ADDL section in the response? ",
              "createdAt": "2021-08-18T23:13:53Z",
              "updatedAt": "2021-08-18T23:27:56Z"
            },
            {
              "originalPosition": 114,
              "body": "Explicitly list the RR types which should be supported (not always included): NS, A, AAAA.\r\nProbably better to point to the new IANA registry described towards the end of the document.\r\n",
              "createdAt": "2021-08-18T23:15:11Z",
              "updatedAt": "2021-08-18T23:27:56Z"
            },
            {
              "originalPosition": 180,
              "body": "If we are getting trusted glue in the delegation response, what is the incentive to re-resolve the in-bailiwick NS names? Any secure resolution of the NS name could only happen over the DoT channel established after processing the DSGLUE RRs.\r\n\r\n",
              "createdAt": "2021-08-18T23:17:01Z",
              "updatedAt": "2021-08-18T23:27:56Z"
            },
            {
              "originalPosition": 214,
              "body": "I would prefer to not allow adding TLSA RRs to the DSGLUE (other than the presence/absence bit).",
              "createdAt": "2021-08-18T23:25:52Z",
              "updatedAt": "2021-08-18T23:27:56Z"
            }
          ]
        }
      ]
    }
  ]
}